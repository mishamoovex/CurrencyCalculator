buildscript {
    ext {

        gradleDependencies = [
                compileSdk: 33,
                targetSdk : 33,
                minSdk    : 26
        ]

        kotlinVersion = "1.7.10"

        //Coroutines RN https://github.com/Kotlin/kotlinx.coroutines
        coroutinesVersion = "1.6.4"
        coroutines = [
                lib : "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutinesVersion",
                test: "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutinesVersion",

        ]

        //Serialization RN https://github.com/Kotlin/kotlinx.coroutines
        serialization = [
                lib      : "org.jetbrains.kotlinx:kotlinx-serialization-json:1.4.0",
                classpath: "org.jetbrains.kotlin:kotlin-serialization:$kotlinVersion"
        ]

        //Data store RN https://developer.android.com/topic/libraries/architecture/datastore
        dataStore = [
                lib: "androidx.datastore:datastore:1.0.0"
        ]

        //Room RN https://developer.android.com/training/data-storage/room
        roomVersion = "2.4.3"
        room = [
                lib                : "androidx.room:room-ktx:$roomVersion",
                runtime            : "androidx.room:room-runtime:$roomVersion",
                annotationProcessor: "androidx.room:room-compiler:$roomVersion",
                kapt               : "androidx.room:room-compiler:$roomVersion"
        ]

        navigationVersin = "2.5.1"
        androidX = [
                splash        : "androidx.core:core-splashscreen:1.0.0",
                lib           : "androidx.core:core-ktx:1.9.0",
                navigation    : "androidx.navigation:navigation-compose:$navigationVersin",
                materialDesign: "com.google.android.material:material:1.6.1",
        ]

        //Lifecycle RN https://developer.android.com/jetpack/androidx/releases/lifecycle#2.5.1
        lifecycleVersion = "2.5.1"
        lifecycle = [
                lifecycleRuntime: "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycleVersion",
                viewModelCompose: "androidx.lifecycle:lifecycle-viewmodel-compose:$lifecycleVersion"
        ]

        hiltVersion = "2.44"
        hiltDependencies = [
                //Hilt RN https://dagger.dev/hilt/gradle-setup
                lib       : "com.google.dagger:hilt-android:$hiltVersion",
                kapt      : "com.google.dagger:hilt-android-compiler:$hiltVersion",
                classpath : "com.google.dagger:hilt-android-gradle-plugin:$hiltVersion",
                navigation: "androidx.hilt:hilt-navigation-compose:1.0.0"
        ]

        composeUiVersion = "1.2.0-rc03"
        conposeCompillerVersion = "1.3.0"
        compose = [
                //Compose activity RN https://developer.android.com/jetpack/androidx/releases/activity#version_160_3
                activity        : "androidx.activity:activity-compose:1.6.0",
                //Compose UI RN https://developer.android.com/jetpack/compose/setup
                ui              : "androidx.compose.ui:ui:$composeUiVersion",
                material        : "androidx.compose.material:material:$composeUiVersion",
                runtime         : "androidx.compose.runtime:runtime:$composeUiVersion",
                liveData        : "androidx.compose.runtime:runtime-livedata:$composeUiVersion",
                foundation      : "androidx.compose.foundation:foundation:$composeUiVersion",
                foundationLayout: "androidx.compose.foundation:foundation-layout:$composeUiVersion",
                //Compose tooling RN https://developer.android.com/jetpack/compose/tooling
                uiTooling       : "androidx.compose.ui:ui-tooling:1.3.0",
                uiToolingPreview: "androidx.compose.ui:ui-tooling-preview:1.3.0",
        ]

        //Accompanist RN https://github.com/google/accompanist/releases
        accompanistVersion = "0.26.5-rc"
        accompanist = [
                "systemUi": "com.google.accompanist:accompanist-systemuicontroller:$accompanistVersion"
        ]

        //Retrofit RN https://github.com/square/retrofit/blob/master/CHANGELOG.md
        retrofitVersion = "2.9.0"
        retrofit = [
                lib          : "com.squareup.retrofit2:retrofit:$retrofitVersion",
                jsonConverter: "com.squareup.retrofit2:converter-gson:$retrofitVersion"
        ]

        //OkHttp RN https://github.com/square/okhttp/blob/master/CHANGELOG.md
        okHttpVersion = "4.10.0"
        okHttp = [
                lib    : "com.squareup.okhttp3:okhttp:$okHttpVersion",
                logging: "com.squareup.okhttp3:logging-interceptor:$okHttpVersion",
        ]

        //Moshi RN https://github.com/square/moshi/blob/master/CHANGELOG.md
        moshiVersion = "1.13.0"
        moshi = [
                lib          : "com.squareup.moshi:moshi:$moshiVersion",
                kapt         : "com.squareup.moshi:moshi-kotlin-codegen:$moshiVersion",
                adapter      : "com.squareup.moshi:moshi-adapters:$moshiVersion",
                kotlin       : "com.squareup.moshi:moshi-kotlin:$moshiVersion",
                jsonConverter: "com.squareup.retrofit2:converter-moshi:2.9.0",
        ]

        //Release notes https://github.com/mannodermaus/android-junit5
        junit5Version = "5.8.2"
        junit4Version = "4.13.2"
        junit = [
                classpath                : "de.mannodermaus.gradle.plugins:android-junit5:1.8.2.1",
                // (Required) Writing and executing Unit Tests on the JUnit Platform
                jupiter                  : "org.junit.jupiter:junit-jupiter-api:$junit5Version",
                jupiterEngine            : "org.junit.jupiter:junit-jupiter-engine:$junit5Version", //testRuntimeOnly

                // (Optional) If you need "Parameterized Tests"
                jupiterParameterizedTests: "org.junit.jupiter:junit-jupiter-params:$junit5Version",

                // (Optional) If you also have JUnit 4-based tests
                junit4                   : "junit:junit:$junit4Version",
                junit4Vintage            : "org.junit.vintage:junit-vintage-engine:$junit5Version" //testRuntimeOnly
        ]

        mockkVersion = "1.12.7"
        mockk = [
                lib  : "io.mockk:mockk:$mockkVersion",
                agent: "io.mockk:mockk-agent-jvm:$mockkVersion"
        ]

        //Release notes https://kotest.io/docs/quickstart/
        kotestVersion = "5.4.2"
        kotest = [
                assertions: "io.kotest:kotest-assertions-core:$kotestVersion"
        ]
    }

    dependencies {
        classpath hiltDependencies.classpath
        classpath serialization.classpath
        classpath junit.classpath
    }
}

plugins {
    id 'com.android.application' version '7.3.1' apply false
    id 'com.android.library' version '7.3.1' apply false
    id 'org.jetbrains.kotlin.android' version '1.7.10' apply false
}